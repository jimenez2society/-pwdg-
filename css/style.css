@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700&display=swap");

@import url("https://fonts.googleapis.com/css2?family=Sono&display=swap");

:root {
  --background-theme-light: #e6e6e6;
  --background-theme-dark: #202020;
  --background-theme-light-secondary: #ffffff;
  --background-theme-dark-secondary: #555555;

  --border-theme-light: 1px solid rgba(128, 128, 128, 0.603);
  --font-family-main: "Roboto", sans-serif;

  --border-round: 500px;
}
/* css resets */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  min-height: 100vh;
  height: 100vh;
  font-family: sans-serif;
  background-color: var(--background-theme-light);
  color: var(--background-theme-dark);
}
body.dark {
  background-color: var(--background-theme-dark);
  color: var(--background-theme-light);
}
ul {
  list-style: none;
}
a {
  text-decoration: none;
}
input,
option,
select,
optgroup,
textarea {
  font-family: var(--font-family-main);
}

/* giving main container width of 80% and padding of 2rem and centering it with margin 0 auto to give some spacing on the sides */

.container {
  width: 80%;
  height: 100%;
  margin: 0 auto;
  padding: 2rem;
  padding-top: 0;
}

/* logo is just text so we give some unique styling with text-shadow */
/* giving display block to allow for padding */
.header .logo {
  text-shadow: 0 2px 5px rgb(255, 134, 245);
  font-size: 2.4rem;
  padding: 1rem 0;
  display: block;
  color: rgb(65, 65, 65);
  font-family: "Sono";
}
/* stying generate button */
#generateButton {
  background: none;
  border: none;
  background-color: rgba(255, 134, 245, 0.61);
  padding: 0.6rem 2rem;
  margin-top: 2rem;
  border-radius: 4px;
}

/* styling the full container of the generator  */
.generator {
  background-color: var(--background-theme-light-secondary);
  padding: 1.2rem;
  max-width: 65%;
  margin: 0 auto;
  margin-top: 100px;
  border-radius: 4px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.274);
}

/* styling the initial positioning of the toast with transition */
.toast {
  background-color: white;
  width: 380px;
  height: 65px;
  border-radius: 8px;
  color: rgb(39, 36, 36);
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 100px;
  left: 80px;
  transform: translateX(-200%);
  transition: 0.4s cubic-bezier(0.15, 0.62, 0.53, 0.96);
}
/* toast when successful */
.toast.toast--success {
  border-left: 10px solid rgb(77, 223, 77);
}
/* toast when not successful */
.toast.toast--error {
  border-left: 10px solid rgb(255, 74, 61);
}
/* when active class is set we set transition back to 0% to bring it on screen */
.toast.active {
  transform: translateX(0%);
}

/* styling the exit button on toast */
.toast--cancel {
  position: absolute;
  top: 8px;
  right: 12px;
  font-size: 12px;
  font-weight: bolder;
  cursor: pointer;
}

/* splitting the content into two columns with grid */
.generator__content {
  display: grid;
  grid-template-columns: 1fr 2fr;
}
.generated-password {
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px dotted black;
  cursor: pointer;
  margin-left: 1.2rem;
}
.generated-password--text {
  font-size: 12px;
  word-wrap: break-word;
  max-width: 500px;
}
.generator h2 {
  font-weight: 200;
  margin-bottom: 3.2rem;
}
/* giving the initial state styles of the checkboxes labels*/
.checkbox {
  display: inline-block;
  border: 1px solid rgba(36, 36, 36, 0.63);
  width: 16px;
  height: 16px;
  border-radius: 400px;
  position: relative;
  box-shadow: 0px 0px 8px transparent;
  cursor: pointer;
}
/* hiding the actual checkbox for styling purposes */
.checkbox--hidden {
  display: none;
}

.formGroup {
  display: flex;
  align-items: center;
  column-gap: 1rem;
  cursor: default;
}

input[type="number"] {
  border: none;
  outline: none;
  font-size: 1.2rem;
  padding: 0.3rem;
  padding-left: 0.8rem;
  border-radius: 4px;
  border: var(--border-theme-light);
}

.formGroup input[type="number"] {
  margin-bottom: 2rem;
}
.formGroup:not(input[type="number"]):not(:last-child) {
  margin-bottom: 1rem;
}

/* giving the text next to check box an inital disabled color */
.checkbox + p {
  color: rgba(150, 150, 150, 0.664);
}

/* when checked we set the text next to check box to a darker color to indicate active */
.checkbox--hidden:checked + .checkbox + p {
  color: var(--background-theme-dark);
}

/* when checked we set the check box label to have a box shadow for a more smooth look when active */
.checkbox--hidden:checked + .checkbox {
  box-shadow: 0px 0px 8px rgba(255, 134, 245, 0.61);
}
/* when checked we set the check box label to have an ::after style as the inner part of the check box to indicate active */
.checkbox--hidden:checked + .checkbox::after {
  content: "";
  width: 12px;
  height: 12px;
  position: absolute;
  background-color: rgb(253, 2, 232);
  border: 2px solid var(--background-theme-light-secondary);
  border-radius: 400px;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  cursor: pointer;
}
